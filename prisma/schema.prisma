generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Association: Represents an organization or group managing products
model Association {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique

  products     Product[]
  categories   Category[]
  transactions Transaction[]
}

// Product: Represents an item that is tracked
model Product {
  id             String        @id @default(uuid())
  name           String
  description    String
  price          Float         // Price in Indian Rupees (â‚¹)
  quantity       Int           @default(0)
  unit           String
  imageUrl       String

  categoryId     String
  associationId  String?

  category       Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  association    Association?  @relation(fields: [associationId], references: [id])
  transactions   Transaction[]

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

// Category: Represents a classification for products
model Category {
  id             String        @id @default(uuid())
  name           String
  description    String?

  associationId  String?
  association    Association?  @relation(fields: [associationId], references: [id])
  products       Product[]
}

// Transaction: Represents movement of product inventory
model Transaction {
  id             String        @id @default(uuid())
  type           String        // "IN" for incoming stock, "OUT" for outgoing stock
  quantity       Int
  productId      String
  associationId  String?

  product        Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  association    Association?  @relation(fields: [associationId], references: [id])

  createdAt      DateTime      @default(now())
}
